# Tox configuration file
# Read more under https://tox.wiki/

[tox]
minversion = 3.24
envlist =
    default
    build
    clean
    dockerbuild
    dockerpublish
    dockertest
    lint
    test
isolated_build = True


[testenv]
description = Invoke pytest to run automated tests
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
    SETUPTOOLS_*
extras =
    testing
commands =
    pytest -m "not docker" {posargs}


[testenv:{dockerbuild,dockertest,dockerpublish}]
description =
    dockerbuild: Build development Docker images.
    dockertest: Test development Docker images. To test the current code without needing to build give "nobuild" as an argument.
    dockerpublish: Publish freshly built Docker images.
#skip_install = True
changedir = {toxinidir}
deps =
    dockerbuild: build[virtualenv]
    dockerpublish: build[virtualenv]
passenv =
    SETUPTOOLS_*
allowlist_externals =
    pytest
    {toxinidir}/build.sh
    {toxinidir}/publish.sh
commands_pre =
    ## Pre-build
    # Build the python package before building the docker image
    dockerbuild: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    dockerbuild: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    dockerbuild: python -m build
    ## Pre-publish
    # Test the code before building
    dockerpublish: pytest -m "not certdeploy_docker"
    # Build the python package before building the docker image
    dockerpublish: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    dockerpublish: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    dockerpublish: python -m build
    # Build the docker image
    dockerpublish: {toxinidir}/build.sh
    # Test the image
    dockerpublish: pytest -m docker
commands =
    dockerbuild: {toxinidir}/build.sh {posargs}
    dockertest: pytest -m docker {posargs}
    dockerpublish: {toxinidir}/publish.sh {posargs}


[testenv:lint]
description = Perform static analysis and style checks
skip_install = True
deps = pre-commit
passenv =
    HOMEPATH
    PROGRAMDATA
    SETUPTOOLS_*
commands =
    pre-commit run --all-files {posargs:--show-diff-on-failure}


[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/stable/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
passenv =
    SETUPTOOLS_*
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}
